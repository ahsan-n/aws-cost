name: Go

on:
  push:
    branches: [ "main" ]
    tags:
      - '*'
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21.4'

      - name: Build
        run: go build -v ./...

      - name: Test
        run: go test -v ./...

  echo-message:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Echo Hello World
        run: echo "Hello World"

#  install-goreleaser:
#    runs-on: ubuntu-latest
#    needs: echo-message
#    steps:
#      - name: Add GoReleaser repository
#        run: |
#          echo 'deb [trusted=yes] https://repo.goreleaser.com/apt/ /' | sudo tee /etc/apt/sources.list.d/goreleaser.list
#
#      - name: Install GoReleaser
#        run: |
#          sudo apt update
#          sudo apt install goreleaser
  release:
    name: Release
    runs-on: ubuntu-latest
    needs: echo-message
    permissions:
      contents: write # to be able to publish a GitHub release
      issues: write # to be able to comment on released issues
      pull-requests: write # to be able to comment on released pull requests
      id-token: write # to enable use of OIDC for npm provenance
    steps:
      - name: Add GoReleaser repository
        run: |
          echo 'deb [trusted=yes] https://repo.goreleaser.com/apt/ /' | sudo tee /etc/apt/sources.list.d/goreleaser.list

      - name: Install GoReleaser
        run: |
          sudo apt update
          sudo apt install goreleaser

      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "lts/*"
      - name: Install dependencies
        run: npm clean-install
      - name: Verify the integrity of provenance attestations and registry signatures for installed dependencies
        run: npm audit signatures
      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: npx semantic-release
